# Ficha a avaliar - versão em português

## Unidade curricular
Computação

## Curso responsável
Licenciatura em Engenharia Civil

## Créditos ECTS
6

## Ano
1

## Semestre
1

## Objetivos
<p>JUSTIFICAÇÃO:<br />Atualmente o uso do computador é essencial em qualquer curso do ensino superior. Nos cursos de engenharia é também importante saber utilizá-lo na resolução de problemas, para o que é necessário que os estudantes dominem a sua programação e o raciocínio lógico. Nesta UC são fornecidos os conhecimentos técnicos de cálculo proposicional que permitem desenvolver raciocínios lógicos, bem como a linguagem MATLAB, que permite uma fácil aprendizagem da programação de computadores, fornece uma enorme biblioteca de software que facilita, mais tarde, resolver problemas mais específicos.<br /><br />OBJETIVOS:<br />Preparar os estudantes para usarem, de modo eficiente, o computador na solução de vários problemas. Os alunos têm que desenvolver algoritmos gerais para sistematizar raciocínios comuns em problemas científicos.</p>

## Resultados de aprendizagem e competências
<p>COMPETÊNCIAS E RESULTADOS DA APRENDIZAGEM:<br /><br />1. Conhecimentos técnicos: identificar as operações lógicas e as propriedades dessas operações; reconhecer expressões escritas com somatórios e produtórios; elaborar programas escritos em pseudocódigo e em MATLAB.<br /><br />2. Compreensão: reconhecer as vantagens e desvantagens de resoluções alternativas; identificar programas escritos em pseudocódigo e em MATLAB.<br /><br />3. Aplicação: capacidade de aplicar métodos inovadores, resolver problemas em áreas emergentes e, em alguns casos excecionais, resolver problemas não familiares. Em contextos alargados e multidisciplinares: competências que lhes permitam uma aprendizagem ao longo da vida, de um modo fundamentalmente auto-orientado ou autónomo.<br /><br />4. Análise: Elaborar um algoritmo implica analisar todos os requisitos do problema e organizar e ordenar a resolução de cada uma das tarefas subjacentes aos requisitos. <br /><br />5. Síntese: Formular algoritmos e elaborar programas para a resolução de problemas gerais facilmente aplicáveis a problemas reais de Engenharia. Combinar as noções base de informática na elaboração de algoritmos complexos. <br /><br />6. Avaliação: Reconhecer de entre várias soluções a mais eficiente; Escolher a melhor solução para quaisquer novos problemas que possam surgir. <br /><br />7. Aptidões interpessoais: comunicação escrita e oral: ser capaz de comunicar, a não especialistas, as suas conclusões e os seus conhecimentos e raciocínios subjacentes, de uma forma clara, sem ambiguidades, quer no estudo em grupo, quer em trabalhos individuais.</p>

## Programa
<p>1. Elementos de Lógica [5%] <br />1.1. Termos e Proposições; <br />1.2. Operações lógicas; <br />1.3. Propriedades das operações lógicas; <br />1.4. Expressões proposicionais; <br />1.5. Condições: universais, impossíveis e possíveis; <br />1.6. Implicação formal; <br />1.7. Quantificadores. <br /><br />2. Algoritmia [40%] <br />2.1. Pseudocódigos; <br />2.2. Ferramentas básicas para todas as linguagens de programação; <br />2.3. Variáveis indexadas. <br /><br />3. Linguagem MATLAB. [55%] <br />3.1. Ambiente Matlab; <br />3.2. Elementos: carateres, constantes, variáveis e operadores aritméticos, de relação e lógicos; <br />3.3. Funções Matlab, expressões aritméticas e lógicas; <br />3.4. Matrizes e &#8220;arrays&#8221;; <br />3.5. Programação: instruções de controlo de sequência; <br />3.6. Ficheiros MATLAB (.mat e .m); <br />3.7. Funções; <br />3.8. Gráficos;<br />3.9. ChatGPT na aprendizagem da programação em linguagem Matlab.<br /><br />Conteúdo Científico: 60% Conteúdo Tecnológico: 40%<br /><br />DEMONSTRAÇÃO DA COERÊNCIA DOS CONTEÚDOS PROGRAMÁTICOS COM OS OBJETIVOS DA UNIDADE CURRICULAR: <br />Os estudantes vão ter que reconhecer expressões escritas em linguagem matemática com somatórios e produtórios e na lógica têm que identificar as operações a usar nas condições, aplicar as propriedades lógicas para simplificar essas expressões proposicionais e reconhecer tautologias, contingências e contradições. Para implementar os programas vão usar a linguagem MATLAB, explorando as suas capacidades gráficas.</p>

## Métodos de ensino e atividades de aprendizagem
<p>Ensino evolutivo de programação, em que a complexidade dos problemas resolvidos vai aumentando à medida que as instruções são apresentadas. No início serão apresentadas algumas técnicas de algoritmia. Nas aulas teóricas e teórico-práticas serão usados exemplos com o computador. Nas aulas teórico-práticas, os alunos vão também desenvolver e testar os seus próprios programas na resolução de vários problemas. Para facilitar o diálogo entre todos os participantes da unidade curricular ela vai ser inserida na plataforma Moodle. Nessa página, além de terem acesso a todos os conteúdos fornecidos pelos docentes, os estudantes têm a possibilidade de consolidar os conceitos com testes de autoavaliação com avaliação comentada imediata e de usar os fóruns para colocar questões que podem ser vistas por toda a comunidade. Com o objetivo de mostrar a utilização do MATLAB em problemas concretos de engenharia serão convidados professores do DEC que fazem uso frequente desta ferramenta.<br /><br />DEMONSTRAÇÃO DA COERÊNCIA DAS METODOLOGIAS DE ENSINO COM OS OBJETIVOS DE APRENDIZAGEM DA UNIDADE CURRICULAR: <br />A utilização do computador nos diferentes tipos de aulas, assim como a sua utilização na avaliação traduz o impacto que esta ferramenta tem na unidade curricular. Além disso, a utilização de metodologias interativas entre todos os participantes da unidade curricular (estudantes e docentes), através da plataforma Moodle, permite um ensino dinâmico garantindo a consecução dos objetivos de aprendizagem. O envolvimento de docentes do departamento que fazem uso frequente das ferramentas computacionais abordados na unidade curricular permite despertar um maior interesse e envolvimento dos estudantes.</p>

## Tipo de avaliação
Avaliação distribuída sem exame final

## Componentes de Avaliação
- Teste: 100.0 %

## Componentes de Ocupação
- Estudo autónomo: 110.0 horas
- Frequência das aulas: 52.0 horas

## Fórmula de cálculo da classificação final
<p>A avaliação consiste em três tipos de avaliação:<br /><br />   QZ = Quizzes nas aulas teóricas;<br />   T1 = 1º Teste a realizar a meados do período escolar; <br />   T2 = 2º Teste a realizar no fim do período letivo. <br /><br />O 1º e o 2º Teste (T1 e T2) definem uma classificação base CB = 40%xT1+60%xT2.<br /><br /><br />Cálculo da Classificação Final (CF):<br /> <br />   Sejam CF1 = CB e CF2 = 10%xQZ+90%xCB = 10%xQZ+36%xT1+54%xT2.<br />   A classificação final é obtida da seguinte forma:   CF = max {CF1,CF2}<br /> <br /><br />Notas:</p>
<p>      1 - Nos dois Testes de avaliação (T1 e T2) o estudante deverá ter uma classificação mínima de 6 valores.<br /><br />      2 - A não comparência a qualquer das provas de avaliação implica a classificação de 0 nessa prova. Em particular, a não comparência a um dos testes T1 e/ou T2 implica a não atribuição de classificação à UC de Computação.</p>
<p>      3 - Os estudantes que, sendo admitidos a exame, não obtenham aprovação após a avaliação descrita, têm acesso a um exame de recurso. <br /><br /><br /></p>

## Obtenção de frequência
<p>A obtenção de classificação final exige o cumprimento de assiduidade à unidade curricular, conforme estabelecido nas regras de avaliação: considera&#8208;se que um estudante cumpre a assiduidade a uma unidade curricular se, tendo estado regularmente inscrito, não exceder o número limite de faltas correspondente a 25% de cada um dos tipos de aulas previstos.<br /><br />No presente ano letivo (2024/2025) estão dispensados do critério de obtenção de frequência no ano letivo em curso, para todos os efeitos, os estudantes que tenham obtido frequência à UC em ano letivo prévio. </p>
<p>A partir do próximo ano letivo (2025/2026) serão dispensados do critério de obtenção de frequência no ano letivo em curso, para todos os efeitos, os estudantes que tenham obtido no ano letivo imediatamente anterior uma nota final na UC igual ou superior a 6 valores.</p>

## Melhoria de classificação
<p>De acordo com as Normas Gerais de Avaliação, os estudantes que tenham sido aprovados à unidade curricular e pretendam melhorar a sua classificação, podem requerer acesso ao exame de recurso. Se a classificação de exame de recurso for inferior, prevalecem as classificações da avaliação distribuída.</p>



# Ficha a avaliar - versão em inglês

## Unidade curricular
Computation

## Curso responsável
Bachelor in Civil Engineering

## Créditos ECTS
6

## Ano
1

## Semestre
1

## Objetivos
<p>JUSTIFICATION: <br />It is essential, in any kind of higher education course, to know how to use computers. In engineering courses, it is also important to know how to use them to solve problems. In order to achieve this skill, students should have the necessary knowledge to implement computer programs and use logical thinking. This UC is provided with the expertise of propositional calculation enabling the students to develop logical thinking. On the other hand, MATLAB facilitates the learning of computer programming and provides a large library of software that will further enable the students to solve more technical problems. <br /><br />OBJECTIVES: <br />Students are encouraged to use the computer, in an efficient way, for solving various problems. They have to develop general algorithms to solve common scientific problems.</p>

## Resultados de aprendizagem e competências
<p>SKILLS AND LEARNING OUTCOMES: <br /><br />1. Technical knowledge of programming: identify the logical operations and properties of these operations, recognize expressions written with sums and products and establish programs written in pseudocode and MATLAB. <br /><br />2. Understanding: recognize the advantages and disadvantages of alternative resolutions and identify programs written in pseudocode and MATLAB. <br /><br />3. Application: ability to implement innovative methods, solve problems in emerging areas and in some exceptional cases solve unfamiliar problems, in expanded and multidisciplinary contexts; acquisition of skills enabling lifelong learning, mainly by self-directed or autonomous ways. <br /><br />4. Analysis: Develop an algorithm implies analyze all requirements of the problem and organize and sort the resolution of each one of the tasks underlying to the requirements. <br /><br />5. Synthesis: Formulate programmes and elaborate algorithms for solving general problems easily applicable to real problems of engineering. To combine the basic notions of information technology in the development of complex algorithms. <br /><br />6. Evaluation: recognize, among several solutions, the most efficient one; choose the best solution for any new problems. <br /><br />7. Interpersonal skills: communication written and oral - ability to communicate with non specialists, their findings, knowledge and reasoning underlying, in a clear and unambiguous way within study group or individual works.</p>

## Programa
<p>1. Elements of Logic. [5%] <br />1.1. Terms and Propositions; <br />1.2. Logical operations; <br />1.3. Properties of logical operations; <br />1.4. Propositional Expressions; <br />1.5. Conditions: Universal, impossible and possible; <br />1.6. Formal implication; <br />1.7. Quantifiers. <br /><br />2. Algorithms. [40%] <br />2.1. Pseudocodes; <br />2.2. Basic tools for all programming languages; <br />2.3. Indexed variables. <br /><br />3. MATLAB Language. [55%] <br />3.1. Matlab environment; <br />3.2. Elements: characters, constants, variables and arithmetic, relational, and logical operators; <br />3.3. Matlab functions, arithmetic and logical expressions; <br />3.4. Matrices and &#8220;arrays&#8221;; <br />3.5. Programming: sequence control instructions; <br />3.6. MATLAB Files (. mat e. m); <br />3.7. Functions; <br />3.8. Graphics;<br />3.9. <span class="Y2IQFc" lang="en">ChatGPT in learning programming in Matlab.</span></p>
<p><br /><br />Scientific Content: 60% Technological content: 40%<br /><br />DEMONSTRATION OF THE SYLLABUS COHERENCE WITH THE CURRICULAR UNIT'S OBJECTIVES: <br />Students will have to recognize expressions written in mathematical language with sums and products. In logics, students have to identify the operations with conditions and apply the logical properties to simplify these propositional expressions. They will use the MATLAB language to implement the programs, exploring graphics.</p>

## Métodos de ensino e atividades de aprendizagem
<p>The main approach is teaching evolutionary programming, in which the complexity of the problems to solve increases as long as the instructions are given. At the beginning, there will be a presentation of some technical algorithmics. In theoretical and practical lectures, examples will be used with the computer. In theoretical-practical classes, students will also develop and test their own programs in the resolution of several problems. In order to show the use of MATLAB to solve problems in engineering, there will be the participation of invited teachers who make frequent use of this tool. This curricular unit is inserted into the Moodle platform, in order to enhance the discussion among all participants. In this platform, all students have access to every issue provided by the teachers and may strengthen their concepts by solving self-evaluation tests whose results are immediately commented on. They may also use the forums to bring questions before all the community of Computation.<br /><br />DEMONSTRATION OF THE COHERENCE BETWEEN THE TEACHING METHODOLOGIES AND THE LEARNING OUTCOMES: <br />The use of computers in different types of classes, as well as their use in evaluation, has a relevant impact on this curricular unit. Furthermore, the application of interactive methodologies among all participants of the curricular unit (students and teaching staff), using the Moodle platform, allows dynamic teaching ensuring the achievement of learning outcomes. The participation of the department teaching staff that applies frequently the computational tools used in the curricular unit allows for raising the interest and involvement of students.</p>

## Tipo de avaliação
Distributed evaluation without final exam

## Componentes de Avaliação
- Teste: 100.0 %

## Componentes de Ocupação
- Estudo autónomo: 110.0 hours
- Frequência das aulas: 52.0 hours

## Fórmula de cálculo da classificação final
<p>The evaluation consists of three evaluation components: <br /><br /><span style="display: inline !important; float: none; background-color: transparent; color: #000000; font-family: Verdana,Arial,Helvetica,sans-serif; font-size: 11px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;">   QZ = </span><span style="display: inline !important; float: none; background-color: transparent; color: #000000; font-family: Verdana,Arial,Helvetica,sans-serif; font-size: 11px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;">Quizzes in lectures;</span><br />   T1 = 1st Test to be held in <span id="result_box" class="short_text" lang="en"><span class="hps">the</span> <span class="hps atn">mid-</span>school <span class="hps">period</span></span>; <br />   T2 = 2nd Test to be realized at the end of the semester. <br /><br />Both 1st and 2nd Test (T1 and T2) define a base classification CB = 40%xT1+60%xT2.<br /><br /></p>
<p>Determination of the final classification (CF):<br /><br />    Let CF1 = CB and CF2 = 10%xQZ+90%xCB = 10%xQZ+36%xT1+54%xT2.<br />    The final classification is obtained as follows:  CF = max {CF1,CF2}<br /><br />Notes:<br /><br />      1 - In the 2nd Test (T2) the student must have a minimum classification of 6 values. <br /><br />      2 - Non-attendance to one of the Tests implies a mark of 0 in that Test. In particular, the non-attendance to one of the tests T1 and/or T2 implies that no classification will be given to the UC of Computation.</p>
<p>      3 - Students not approved may have access to the exam of supplementary season ("<em>exame de recurso</em>").  <br /><br /><br /></p>

## Obtenção de frequência
<p>Achieving final classification requires compliance with attendance at the course unit, according to the assessment rules: it is considered that students meet the attendance requirements if, having been regularly enrolled, the number of absences of 25% for each of the classes&#8217; types is not exceeded.<br /><br />In the current academic year (2024/2025), students who have attended the course in a previous academic year are exempt from the attendance requirement for the current academic year. <br /><br />From the next academic year (2024/2025) onwards, students who have obtained a final mark of 6 or more in the UC in the immediately preceding academic year will be exempt from the criterion of obtaining attendance in the current academic year, for all intents and purposes.<br /><br /></p>

## Melhoria de classificação
<p>In accordance to the General Standards of Evaluation, students who were approved at the curricular unit and wish to improve their grades, they can do so by participating in the respective exam of the supplementary season ("<em>época de recurso</em>"). If the appeal examination mark is lower, the marks for the distributed assessment take precedence. </p>

