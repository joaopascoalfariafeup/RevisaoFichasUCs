# Curso a analisar
Licenciatura em Inteligência Artificial e Ciência de Dados

## Descrição
A Licenciatura em Inteligência Artificial e Ciência de Dados da Universidade do Porto resulta de uma colaboração entre as Faculdades de Ciências (FCUP) e de Engenharia (FEUP). É um curso inovador que forma profissionais qualificados na área de Inteligência Artificial e Ciência de Dados. Oferece uma forte formação em Ciência de Computadores / Engenharia Informática e sólidos conhecimentos em Matemática. São trabalhadas competências em programação, algoritmia, estatística, métodos numéricos, otimização, aprendizagem computacional, processamento de imagem e de língua natural, robótica e sistemas Inteligentes, segurança e privacidade.
Competências Profissionais
Os licenciados adquirem competências nas áreas de programação, fundamentos da computação, sistemas de informação, inteligência artificial, machine learning, sistemas autónomos, robótica, processamento de língua natural, visão computacional, segurança e privacidade, matemática, estatística e otimização. Serão capazes de desenvolver soluções e aplicações computacionais nos domínios da inteligência artificial e ciência de dados, não estando limitados a estes campos. Saberão fazer a escolha apropriada de modelos, conjuntos de dados, algoritmos, linguagens, bibliotecas e interfaces com o utilizador. Além destas competências, nesta licenciatura desenvolve-se a capacidade de integrar conhecimento interdisciplinar na resolução de novos problemas, fomentando o pensamento crítico e com grande nível de abstração.
Saídas Profissionais
A Inteligência artificial e a ciência de dados são áreas que têm uma forte procura por parte dos empregadores na região Norte, a nível nacional e internacional. Os licenciados em IACD poderão exercer funções de cientista de Dados em empresa ou em laboratório de investigação, especialista em Aprendizagem Computacional (Machine Learning), analista de Dados, especialista em Inteligência Artificial com ênfase em Ciência de Dados, programador especializado em Inteligência Artificial e Ciência de Dados, outras funções e carreiras de especialista na área da Ciência de Computadores. Os licenciados deste curso poderão também seguir para segundo ciclo especializado em IA e CD ou para outros segundos ciclos da área da Computação.
Estrutura do Ciclo de estudos
Tem a duração de 6 semestres e é constituída por 180 créditos ECTS, devendo ser efectuados 30 ETCS em cada semestre. Tem 120 ECTS obrigatórios em Ciência de Computadores, 42 ECTS em Matemática. Os restantes 18 ECTS podem ser obtidos em unidades curriculares opçionais da área da Ciência de Computadores/Engenharia Informática, Matemática e Física.
Regimes de Acesso 2024/2025
Regime Geral
Numerus Clausus: 60 (*)
Regimes Especiais
Vagas: 5
Concursos Especiais
Vagas: Maiores de 23 anos: 5 (*) | TOCS: 2 (*)
Mudança de Par Instituição/Curso
Vagas: 1º ano curricular: 3 (*) |
restantes anos curriculares: 4
Reingresso
Não está sujeito a limitações quantitativas.
Concurso Especial - Estudante Internacional
Vagas: 15 (**) (
1ªFase
|
2ªFase
|
3ªFase
)
(*) As vagas foram aprovadas por despacho reitoral de 26 de abril 2024.
(**) As vagas foram aprovadas por despacho reitoral de 29 de novembro de 2023.
Informações
Prazos de Candidatura 2024-2025
Para além das finalidades regulares de utilização dos seus dados pela U.Porto, relacionados com a seleção e seriação das candidaturas e, posteriormente, com a gestão académica dos candidatos selecionados, informamos que, face ao enquadramento da presente formação no âmbito do «Programa de Formação Multidisciplinar da U.Porto – Impulso Jovens STEAM & Impulso Adultos» (PRR), a identificação de todos os participantes (nome, NIF e contacto) terá de ser comunicada à Direção-Geral do Ensino Superior para efeitos de monitorização da execução do projeto.
Quaisquer dúvidas sobre o tratamento dos seus dados poderão ser endereçadas à Encarregada da Proteção de Dados da U.Porto, para
dpo@reit.up.pt
.
Contactos
Diretor do Curso:
lic.iacd.diretor@fc.up.pt
Comissão de Acompanhamento:
lic.iacd.ca@fc.up.pt
Unidade de Pré-Graduação:
pre.graduacao@fc.up.pt
Estudantes do curso:
lic.iacd@fc.up.pt
Nota: Informação disponibilizada a título informativo. Não dispensa a consulta do DR.

# Unidade curricular: Tecnologias Web

## Ano: 3
## Semestre: 1
## Grupo(s) de opção a que pertence: Opção (S1)/Desenvolvimento Pessoal/Competências Transversais/Transferíveis/Opção UPorto
## ECTS: 6.0
## Objetivos: <p>O objetivo desta unidade curricular é familiarizar os alunos com os conceitos e tecnologias utilizados no desenvolvimento de aplicações centradas na web. Isto inclui aprender sobre os diferentes tipos de aplicações web, as diferentes tecnologias que podem ser usadas para construí-las e as melhores práticas para projetar e desenvolver aplicações web.</p>

## Resultados de aprendizagem: <p>Após este curso, os alunos serão capazes de projetar e implementar aplicações centradas na web que sejam escaláveis, seguras e amigáveis ao usuário. Eles poderão fazer isso entendendo os diferentes aspectos do desenvolvimento web, incluindo o back-end do servidor, o front-end do navegador, marcação, apresentação, interação e comunicação assíncrona.</p>

## Pré-requisitos e co-requisitos: Competências razoáveis de programação (pré-requisito)

# Unidade curricular: Mecânica

## Ano: 3
## Semestre: 1
## Grupo(s) de opção a que pertence: Opção (S1)/Desenvolvimento Pessoal/Competências Transversais/Transferíveis/Opção UPorto
## ECTS: 6.0
## Objetivos: Esta unidade curricular  visa apresentar os conceitos e princípios básicos da mecânica clássica, e da relatividade restrita, com ênfase na compreensão de conceitos e na aplicação ao mundo real. Os alunos deverão ter a capacidade de manipular conceitos fundamentais e saber aplicá-los à resolução de problemas. Os estudantes serão motivados a considerar a aplicação dos princípios discutidos na cadeira a outras áreas do conhecimento científico e tecnológico. Será dada atenção particular à formação na resolução de problemas, familiarizando os estudantes com heurísticas e modos de pensar dos físicos experientes.

## Resultados de aprendizagem: Estudantes deverão demonstrar boa compreensão de conceitos fundamentais da mecânica (descrição do movimento, massa, força, momento linear e angular, energia) e de relatividade restrita (relatividade do espaço e tempo, diagramas de espaço-tempo e momento e energia relativistas) através   da correcta  resolução de problemas de aplicação direta destes conceitos, e da modelização e análise, em  termos de conceitos de mecânica,  de situações do mundo real.

## Pré-requisitos e co-requisitos: Trigonometria básica, cálculo vetorial básico, derivação de funções reais de variável real, fundamentos de geometria no espaço.

# Unidade curricular: Ciência de Dados em Larga Escala

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: Introdução ao uso de infra-estruturas de &quot;cloud computing&quot; para processamento massivo de dados (&quot;big data&quot;) em problemas do mundo real.

## Resultados de aprendizagem: - Uso de serviços de cloud-computing para aplicações  big data.<br />- Desenho e implementação de aplicações para big-data usando modelos de programação suportados pela cloud.<br />- Conhecimento de fundamentos e algoritmos nucleares para mineração de dados em aplicações de big data.<br />- Experiência prática com ferramentas do estado da arte disponíveis para cloud computing e big data.

# Unidade curricular: Programação de Dispositivos Móveis

## Ano: 3
## Semestre: 1
## Grupo(s) de opção a que pertence: Opção (S1)/Desenvolvimento Pessoal/Competências Transversais/Transferíveis/Opção UPorto
## ECTS: 6.0
## Objetivos: <p>Esta unidade curricular tem como objetivo global a compreensão da complexidade das plataformas atuais de programação de dispositivos móveis, de modo a fornecer aos estudantes as ferramentas necessárias para enfrentar os crescentes desafios na área. Como formação complementar, os estudantes são expostos aos requisitos e desafios da implementação de backends de forma a suportar as aplicações móveis.<br /><br />Pretende-se que os estudantes:<br /><br />- sejam capazes de projetar e implementar aplicações móveis;<br /><br />- fiquem a conhecer as implicações do RGPD, evitando alguns dos erros mais comuns em relação à privacidade dos usuários;<br /><br />- fiquem cientes da necessidade de incluir segurança no desenho das soluções;<br /><br />- compreendam os compromissos implícitos entre desempenho, consumo de energia e segurança / privacidade<span style="color: #666666;"><span style="font-family: Arial, serif;"><span style="font-size: small;"><br /></span></span></span></p>

## Resultados de aprendizagem: <p><span style="color: #000000;"><span style="font-family: Arial, serif;"><span style="font-size: small;">Os resultados da aprendizagem são centrados em torno da compreensão do projeto e implementação de aplicativos móveis. O programa foca todos os aspetos mais relevantes dessas tecnologias, facilitando a compreensão dos diferentes conceitos e a relação entre eles. Também inclui um componente de aplicação que permite aos alunos adquirir habilidades na criação e programação de sistemas baseados nesses conceitos.</span></span></span></p>

# Unidade curricular: Cálculo II

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: Aquisição dos conhecimentos e competências básicos do Cálculo Diferencial e Integral em várias variáveis reais.

## Resultados de aprendizagem: Compreensão e capacidade de utilizar as noções e os resultados dados no programa, nomeadamente através da resolução de exercícios práticos.

# Unidade curricular: Elementos de Inteligência Artificial e Ciência de Dados

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p class="p1">A UC abordará os temas atuais da Inteligência Artificial (IA) e Ciência de Dados (CD), dando aos estudantes um conhecimento técnico, ainda que não aprofundado, sobre os seus conceitos, problemas e aplicações.<br /> <br />Relativamente às áreas de IA e CD os objectivos da UC são:<br /><br /> - Fornecer uma perspetiva histórica do seu surgimento e evolução.<br /> - Identificar a sua relevância e impacto na sociedade atual.<br /> - Estudar a relação com outras ciências e as interações com a sociedade.<br /> - Conhecer as diferentes etapas dos processos de desenvolvimento.<br /> - Desenvolver pequenos projetos de IA e CD.</p>

## Resultados de aprendizagem: <p class="p1">Desenvolvimento de competências:</p>
<p class="p1">1 - capacidade para identificar conceitos gerais, problemas e aplicações de IA e CD relativos a temas atuais e históricos da inteligência artificial e ciência de dados, e a sua relação com a ciência, a sociedade e a inovação, assim como dos seus impactos.</p>
<p class="p1">2 - capacidade para descrever debater e criticar as interações da IA e CD com a sociedade.</p>
<p class="p1">3 - capacidade para desenvolver pequenos projetos de IA e CD.</p>

## Pré-requisitos e co-requisitos: Conhecimentos de Programação na Linguagem Python.

# Unidade curricular: Programação Concorrente

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p>O objetivo principal é fornecer uma formação sólida sobre concorrência, com particular ênfase nos princípios fundamentais de concorrência e no desenho e implementação de modelos de computação concorrente em arquiteturas de memória partilhada, assim como dos principais problemas inerentes.</p>

## Resultados de aprendizagem: <p>Ao completar a UC espera-se que o estudante adquira as seguintes competências:</p>
<ul>
<li>compreender os princípios fundamentais de concorrência e as principais problemáticas relacionadas com a concorrência e com a execução concorrente de programas.</li>
<li>conhecer as especificidades das arquiteturas de memória partilhada que são relevantes para o desempenho de uma aplicação concorrente, como o fluxo de dados e o processamento das instruções, o funcionamento da memória, e a sincronização e coerência dos dados em memória.</li>
<li>conhecer os princípios teóricos que fundamentam um bom e correto desenho de uma aplicação concorrente, com particular ênfase nos conceitos e aspetos formais da sincronização.</li>
<li>estar familiarizado com as principais primitivas de<span class="Apple-converted-space">  </span>sincronização existentes para o desenvolvimento de aplicações concorrentes e ser capaz de modelar e implementar estruturas de<span class="Apple-converted-space"> </span>dados, ferramentas e/ou aplicações concorrentes correta e<span class="Apple-converted-space">  </span>eficientemente, usando primitivas/bibliotecas duma linguagem de programação atual para programação em memória partilhada utilizando processos e/ou threads.</li>
</ul>

## Pré-requisitos e co-requisitos: Aprovação em Lógica Computacional e Sistemas de Operação

# Unidade curricular: Arquitetura de Computadores

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p>Fornecer aos estudantes os conceitos fundamentais da organização e funcionamento de um computador, nomeadamente, o seu modelo de representação de dados e programas, as suas componentes e interacções, e a forma de avaliar o seu desempenho.<br /><br /></p>

## Resultados de aprendizagem: Ao concluir esta unidade curricular o estudante deverá:<br /><ul><br /><li>conhecer o modelo proposto pela arquitectura de von Neumann</li><br /><li>conhecer a relação íntima entre o software e o hardware </li><br /><li>compreender a forma como as componentes básicas do CPU interagem</li><br /><li>compreender o fluxo de informação e de controle do CPU numa implementação de ciclo-único, multi-ciclo e pipelining</li><br /><li>compreender a interacção entre o CPU e o sub-sistema de memória</li><br /><li>compreender a hierarquia de memória e o seu impacto na performance</li><br /><li>conhecer as métricas e técnicas básicas de análise de performance</li><br /></ul>

# Unidade curricular: Modelação e Otimização

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: 1. Aprender a formular matematicamente um problema de otimização;<br /> 2. Estudar os principais problemas de otimização relevantes;<br /> 3. Ganhar sensibilidade para a dificuldade teórica e prática (computacional) da resolução desses problemas;<br /> 4. Estudo de modelos de otimização subjacentes ao funcionamento de métodos de aprendizagem automática.

## Resultados de aprendizagem: Conhecimento dos modelos de otimização subjacentes aos principais métodos aprendizagem automática.

## Pré-requisitos e co-requisitos: Pré-requisitos: apenas os conhecimentos fornecidos pelas unidades curriculares dos dois primeiros anos.<br /> Co-requisitos: nenhum.

# Unidade curricular: Lógica Computacional

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <p>Pretende-se que o aluno aprenda as noções básicas do raciocínio lógico e seja capaz de utilizar correctamente os sistemas dedutivos; compreenda as relações entre as semânticas e os sistemas dedutivos e a sua caracterização do ponto de vista da decidibilidade; reconheça o papel dos sistemas formais nas várias áreas da Ciência de Computadores.</p>

## Resultados de aprendizagem: Conhecer os principais tópicos da lógica proposicional e da lógica de primeira ordem, bem como a sua aplicação na programação em lógica.

## Pré-requisitos e co-requisitos: <p>Estruturas Discretas</p>

# Unidade curricular: Laboratório de IA e CD

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <p style="font-weight: 400;">Objetivos: Objetivos: Fornecer aos estudantes metodologias de desenvolvimento de software, de projetos em IA e CD, de trabalho em equipa e de comunicação através da realização de projetos desenhado para o efeito.<br /><br /> </p>

## Resultados de aprendizagem: <p>Competências:</p>
<ol>
<li>Estruturar o desenvolvimento de software</li>
<li>Participar numa equipa de desenvolvimento</li>
<li>Estruturar o desenvolvimento e a gestão de um projeto de IA/CD</li>
<li>Comunicar resultados do projeto dentro da equipa e a terceiros</li>
</ol>
<p> </p>

## Pré-requisitos e co-requisitos: Conhecimentos avançados de programação e de técnicas e conceitos de Inteligência Artificial e de Ciência de Dados

# Unidade curricular: Estruturas de Dados

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: Reforçar as competências de programação dos estudantes, com ênfase no desenho e implementação de algumas das principais estruturas de dados e correspondentes algoritmos. Será usada uma metodologia orientada aos objectos com recurso à linguagem Java. Serão introduzidas noções sobre eficiência e análise de complexidade de algoritmos.

## Resultados de aprendizagem: Ao concluirem esta unidade curricular os estudantes deverão saber:<br /><ul><br /><li>usar os princípios básicos de uma linguagem de programação orientada aos objectos, nomeadamente herança, polimorfismo, interfaces, classes do tipo colecção e iteradores.</li><br /><li>escrever classes que implementem algumas estruturas de dados lineares, como sejam listas, pilhas, filas, conjuntos, dicionários, tabelas de hash e árvores binárias.</li><br /><li>usar uma API que implemente listas, pilhas, filas, conjuntos, e tabelas de hash.</li><br /><li>desenvolver algoritmos básicos associados às estruturas de dados estudadas.</li><br /><li>usar algumas das técnicas algoritmicas, nomeadamente recursividade, pesquisa com retrocesso e dividir-para-conquistar.</li><br /><li>fazer a análise de complexidade de algoritmos e identificar as principais classes de complexidade (competência básica).</li><br /><li>aplicar os conhecimentos na resolução prática de problemas concretos.</li><br /></ul>

## Pré-requisitos e co-requisitos: Possuir competência básica de programação normalmente adquirida nas unidades curriculares de programação do 1º ano.

# Unidade curricular: Programação Funcional

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p>Introdução à programação funcional usando a linguagem Haskell.</p>

## Resultados de aprendizagem: <p>No final da disciplina, o(a) aluno(a) deverá ser capaz de: <br />1. Definir funções usando equações com padrões; <br />2. Codificar algoritmos recursivos elementares sobre listas e árvores em Haskell;<br /> 3. Definir novos tipos algébricos para representar dados;<br /> 4. Compor problemas de programação usando funções de ordem superior e lazy evaluation ;<br />5. Provar propriedades elementares de programas usando teoria equacional e indução.</p>

# Unidade curricular: Inteligência Artificial

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p>Objectivos: Estudo dos conceitos fundamentais e técnicas de uso mais generalizado da Inteligência Artificial. <br /> <br /><br /></p>

## Resultados de aprendizagem: <p>Competências: <br />- capacidade para escolha criteriosa de técnicas de Inteligência Artificial para uso em aplicações concretas, <br />- capacidade para implementar aplicações com base nessas técnicas.</p>

## Pré-requisitos e co-requisitos: É fortemente recomendado que o estudante tenha cursado pelo menos a disciplina de Estruturas de Dados.

# Unidade curricular: Introdução à Robótica Inteligente

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: 1. Compreender os conceitos básicos de robótica e o enquadramento da inteligência artificial na robótica.<br />2. Estudar métodos de perceção e interpretação sensorial que permitam criar estados do mundo precisos e métodos de localização de robôs móveis.<br />3. Estudar os métodos que permitam a robôs móveis navegarem em ambientes conhecidos ou desconhecidos usando algoritmos de planeamento e navegação.<br />4. Compreender e utilizar algoritmos de aprendizagem computacional para robôs.<br />5. Analisar as principais competições robóticas nacionais e internacionais, os simuladores robóticos mais realistas e as plataformas robóticas mais avançadas disponíveis no mercado.<br />6. Incentivar capacidade de comunicação em tópicos técnicos e científicos e abordagens científicas saudáveis.

## Resultados de aprendizagem: - Conhecimentos de robótica inteligente.<br />- Conhecimentos de perceção e interpretação sensorial.<br />- Conhecimentos de navegação.<br />- Conhecimentos e capacidade de aplicação de algoritmos de aprendizagem computacional para robôs.<br />- Conhecimentos sobre as principais competições robótica, simuladores robóticos e plataformas robóticas.<br />- Capacidade para realizar trabalho científico na área da robótica inteligente.<br />- Capacidade para realizar um projeto completo de robótica.

## Pré-requisitos e co-requisitos: Conhecimentos de Programação (Python or C++) e de Inteligência Artificial.

# Unidade curricular: Desenho e Análise de Algoritmos

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p>Aprendizagem de técnicas de concepção e análise de algoritmos eficientes.</p>

## Resultados de aprendizagem: <p>Enriquecimento do conhecimento sobre modelos genéricos para alguns tipos de problemas e sobre técnicas algorítmicas a eles associadas. Experiência prática na aplicação de algoritmos genéricos a problemas concretos. Competência na análise da complexidade assintótica de algoritmos.<br /><br /></p>

## Pré-requisitos e co-requisitos: <p>Conhecimentos de programação (C/C++ ou JAVA), de algoritmos básicos (de contagem, pesquisa e de ordenação) e de algumas estruturas de dados. O estudante deve preferencialmente ter já aprovação à unidade curricular de  "Programação Imperativa" (CC1003) e a  "Estruturas de Dados" (CC1007), ou a unidades curriculares equivalentes.  <br /><br /><br /></p>

# Unidade curricular: Programação Imperativa

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p>Introduzir os conceitos fundamentais de programação imperativa enfatizando a noção de algoritmo e de modularidade, tendo por base a linguagem de programação C. Será dada ênfase à resolução prática de problemas, algoritmos básicos de contagem, pesquisa e ordenação, e à qualidade de escrita de código.<br /><br /></p>

## Resultados de aprendizagem: <p>Ao concluirem esta unidade curricular os estudantes deverão saber:</p>
<ul>
<li>usar a sintaxe e semântica de constituintes fundamentais da linguagem C.</li>
<li>escrever, testar e executar programas para resolução de problemas simples a partir de uma especifição informal.</li>
<li>implementar alguns algoritmos elementares em C.</li>
<li>usar o conceito de apontador e usá-lo no processamento de variáveis indexadas e cadeias de carateres.</li>
<li>utilizar a alocação dinâmica de memória.</li>
<li>utilizar funções da biblioteca padrão da linguagem C para processamento de cadeias e leitura/escrita de ficheiros.</li>
<li>aplicar técnicas de programação estruturada.</li>
<li>utilizar estruturas elementares de dados (listas ligadas, arvores).</li>
</ul>
<p>   </p>

## Pré-requisitos e co-requisitos: N/A

# Unidade curricular: Métodos Numéricos

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <p style="text-align: justify;">O objetivo desta UC é dado um problema matemático estudar condições suficientes para a existência e unicidade de solução, escolher um método numérico para a sua resolução, controlar os erros, fornecer um algoritmo a implementar e experimentar em máquina de calcular ou em computador, e interpretar os resultados.</p>

## Resultados de aprendizagem: <p>O estudante deve ser capaz de resolver numéricamente  problemas matemáticos nos temas descritos no programa da unidade curricular.</p>

# Unidade curricular: Aprendizagem Computacional I

## Ano: 2
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p>Esta UC faz uma introdução à Aprendizagem Computacional (AC) fornecendo aos estudantes uma breve contextualização histórica e referência a algumas das suas aplicac&#807;o&#771;es mais relevantes.</p>
<p>Pretende-se que os estudantes façam um primeiro contacto com va&#769;rias tarefas e abordagens envolvidas em problemas de AC e que possam, desta forma, identificar as estratégias mais adequadas.</p>

## Resultados de aprendizagem: Pretende-se que os(as) estudantes: <br /><ul><br /><li>conheçam os va&#769;rios tipos de tarefas de aprendizagem computacional (AC);</li><br /><li>identifiquem problemas que possam ser abordados como tarefas de AC;</li><br /><li>conheçam os fundamentos algori&#769;tmicos da AC;</li><br /><li>conheçam as fases de um projeto de AC;</li><br /><li>conheçam os principais me&#769;todos/algoritmos para cada tipo de tarefa de AC e compreender o essencial do seu funcionamento;</li><br /><li>avaliem, de forma correta, os resultados de um projeto de AC;</li><br /><li>desenvolvam e implementem estratégias em algoritmos de AC que visem superar desafios de domínio;</li><br /><li>utilizem, de forma adequada, software para a resoluc&#807;a&#771;o de problemas simples de AC.</li><br /></ul>

# Unidade curricular: Interação Pessoa-Máquina

## Ano: 3
## Semestre: 1
## Grupo(s) de opção a que pertence: Opção (S1)/Desenvolvimento Pessoal/Competências Transversais/Transferíveis/Opção UPorto
## ECTS: 6.0
## Objetivos: <p>A Unidade Curricular visa introduzir aos alunos os princípios fundamentais de criação e desenvolvimento de Interfaces Pessoa-Máquina, focando-se em sistemas interativos. A sua abordagem engloba tanto os conceitos teóricos, tais como usabilidade e design centrado no utilizador, assim como as práticas de prototipagem de baixa e alta fidelidade, através da construção de interfaces gráficas.</p>

## Resultados de aprendizagem: <p>1. Capacidade de criar métodos e ferramentas para estudar e modelar utilizadores e cenários onde deva ocorrer interação Pessoa-Máquina<br />2. Capacidade para desenvolver e para avaliar modelos conceptuais para a criação de interações pessoa-máquina<br />3. Capacidade de desenhar, desenvolver e avaliar protótipos de baixa a alta fidelidade</p>

# Unidade curricular: Gestão e Visualização de Informação

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: 

## Resultados de aprendizagem: 

# Unidade curricular: Estatística Aplicada B

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p>Aquisição de uma base sólida de conhecimentos em estatística indutiva e desenvolvimento de capacidades e engenho em técnicas de modelação estatística, fundamentais para a apresentação, tratamento e interpretação de conjuntos de dados.</p>

## Resultados de aprendizagem: <p>Ao completar esta unidade curricular, o estudante deverá</p>
<p>- dominar  os conceitos e princípios fundamentais da Estatística, e em particular da Inferência Estatística básica.</p>
<p>- conhecer e saber aplicar os métodos e técnicas fundamentais da inferência estatística paramétrica e não-paramétrica a problemas concretos, envolvendo a análise crítica e apresentação dos resultados obtidos;</p>
<p>- ser capaz de usar a linguagem de programação R na análise estatística de diferentes tipos de dados e resolução de problemas.</p>

# Unidade curricular: Álgebra Linear e Geometria Analítica

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <p align="LEFT">Ao completar esta unidade curricular, o estudante deve dominar os principais conceitos de Álgebra Linear e Geometria Analítica. Nomeadamente, deve compreender, ser capaz de trabalhar e usar as propriedades dos conceitos de matriz, determinante, espaço vetorial real e função linear.</p>

## Resultados de aprendizagem: <p>Ao completarem esta unidade curricular, o estudante deve ser capaz de: efetuar as principais operações com matrizes; resolver sistemas de equações lineares usando matrizes; utilizar matrizes para discutir sistemas de equações lineares; calcular determinantes; aplicar as propriedades dos determinantes; reconhecer espaços e subespaços vetoriais reais; determinar bases de espaços vetoriais reais; calcular a dimensão de espaços vetoriais; reconhecer funções lineares e as suas principais propriedades; determinar ou justificar porque não existem funções lineares satisfazendo determinadas condições; trabalhar com matrizes associadas a funções lineares; determinar vetores e valores próprios de matrizes; diagonalizar uma matriz (caso seja possível); usar algumas propriedades da diagonalização de matrizes. Identificar cónicas<br /><br /></p>

# Unidade curricular: Programação Competitiva

## Ano: 2
## Semestre: 1
## Grupo(s) de opção a que pertence: Opção (S1)/Desenvolvimento Pessoal/Competências Transversais/Transferíveis/Opção UPorto
## ECTS: 6.0
## Objetivos: Os principais objectivos são a consolidação e aquisição de novos conhecimentos de algoritmia e estruturas de dados e do seu eficiente desenho e implementação através da realização de desafios de programação no estilo de concursos de programação e de entrevistas de emprego.

## Resultados de aprendizagem: Ao terminar esta unidade curricular os alunos deverão:<br />- Ter demonstrado capacidades de resolução criativa de problemas de carácter algorítmico;<br />- Conhecer um leque variado de ideias algoritmicas e estruturas de dados e como os adaptar/aumentar para os aplicar a problemas concretos;<br />- Ter criado um portfolio pessoal de código com soluções para múltiplos problemas, incluindo implementações eficientes e reutilizáveis dos algoritmos e estruturas de dados subjacentes;<br />- Ter demonstrado capacidade de discutir a alto nível os problemas e possíveis variantes, percebendo as implicações ao nível da eficiência dessas variações

# Unidade curricular: Sistemas Multimédia

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: 

## Resultados de aprendizagem: 

# Unidade curricular: Eletrónica Digital e Circuitos

## Ano: 3
## Semestre: 1
## Grupo(s) de opção a que pertence: Opção (S1)/Desenvolvimento Pessoal/Competências Transversais/Transferíveis/Opção UPorto
## ECTS: 6.0
## Objetivos: <p>Introdução à teoria de circuitos, electrónica analógica básica e sistemas digitais.</p>

## Resultados de aprendizagem: <p>No final do curso os alunos deverão ser capazes de:</p>
<p>- entender e aplicar a álgebra Booleana a problemas de lógica;</p>
<p>- reconhecer alguns circuitos digitais básicos relevantes e compreender o seu funcionamento;<br /><br />A formação em lógica Booleana e os vários exemplos e problemas resolvidos ao longo do curso suportam estes objetivos.</p>

## Pré-requisitos e co-requisitos: <p>Aritmética e lógica. </p>

# Unidade curricular: Modelos de Computação

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p>Ensinar conceitos e resultados fundamentais sobre três modelos de computação básicos (autómatos finitos, autómatos de pilha e máquinas de Turing) e sobre as classes de linguagens formais associadas, com foco nas linguagens regulares e independentes de contexto.</p>

## Resultados de aprendizagem: <p>Capacidade de especificar linguagens formais simples usando formas de descrição alternativas e de determinar a sua classificação na hierarquia de poder computacional.</p>

# Unidade curricular: Cálculo I

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <p>Familiarizar-se com os conceitos básicos e técnicas do cálculo, a nível de funções reais de uma variável real, bem como sucessões e séries.</p>

## Resultados de aprendizagem: <p>Capacidade de resolver problemas de cálculo. Autonomia na resolução de exercícios.</p>
<div> </div>

# Unidade curricular: Aprendizagem Computacional II

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <span lang=&quot;PT&quot;>Esta UC consiste numa introdução a alguns dos fundamentos algorítmicos de aprendizagem computacional profunda e por reforço. <br /><br />Pretende-se que os estudantes façam um primeiro contacto com tais conceitos e com métodos concretos de implementação de tais algoritmos.<br /><br />Deverão ser capazes de selecionar fundamentadamente algoritmos adequados assim como detalhes de arquiteturas de modelos e técnicas de aprendizagem para cada tarefa apresentada. </span><span lang=&quot;PT&quot;><br /><br />Deverão saber estimar o desempenho dos métodos aplicados e usar esta informação para desenho iterativo dos modelos.<br /></span>

## Resultados de aprendizagem: - Compreensão dos fundamentos dos algoritmos e metodologias de aprendizagem profunda e aprendizagem por reforço.<br />- Capacidade de justificar a escolha de uma solução de aprendizagem profunda ou por reforço a um determinado problema<br />- Capacidade de desenho de soluções para novos problemas com base em métodos de aprendizagem profunda ou por reforço<br />- Capacidade de avaliação do desempenho da solução proposta e otimização do modelo

## Pré-requisitos e co-requisitos: - Conhecimentos iniciais de inteligência artificial e ciência de dados <br />- Conhecimentos iniciais de aprendizagem computacional (por exemplo, frequência da UC de Aprendizagem Computacional I).<br />- Conhecimentos de programação de preferência Python. <br />- Conhecimentos de álgebra matricial básica e de cálculo em R e em R^n

# Unidade curricular: Introdução aos Computadores

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <p>Fornecer aos estudantes uma visão geral sobre a Ciência de Computadores, em particular, sobre os conceitos fundamentais sobre a estrutura e o funcionamento dos computadores digitais e dos sistemas de operacão.  </p>

## Resultados de aprendizagem: <p>Ao concluir esta disciplina o estudante deverá:<br /><br />- entender as noções básicas sobre o funcionamento e a arquitetura dos computadores.<br />- conhecer conceitos básicos sobre um sistema de operação (Unix/Linux).<br />- conhecer os diferentes tipos de linguagens de programação.<br />- ser capaz de usar a linha de comandos do Linux e escrever "scripts" básicos em Bash shell.<br /><br /> </p>

# Unidade curricular: Probabilidades e Estatística B

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <div>Aquisição dos conceitos fundamentais de Probabilidades e Estatística e a sua aplicação a situações concretas.<br /><br /></div><br /><div>Será dada particular atenção à apresentação e compreensão dos conceitos, mantendo o tratamento matemático num nível intermédio.</div>

## Resultados de aprendizagem: Pretende-se que no final da unidade curricular, o estudante:<br /><br />1. compreenda os conceitos envolvidos num estudo estatístico;  esteja consciente das inúmeras dificuldades que surgem em cada estudo particular; esteja sensibilizado para analisar com sensatez e espítrito crítico as conclusões de um estudo de natureza estatística;<br /><br /><br />2.saiba identificar e aplicar técnicas de Estatística Descritiva adequadas, para organizar e sumarizar um conjunto de dados bem como interpretá-los;<br /><br />3. domine os conceitos fundamentais da teoria das probabilidades e saiba calcular probabilidades associadas aos fenómenos em estudo;<br /><br /><br />4. seja capaz de caracterizar variáveis aleatórias  aleatórios e identificar as respectivas distribuições de probabilidade; <br /><br />5. saiba aplicar técnicas adequadas de estimação pontual e intervalar para inferir sobre os parâmetros/características de uma população (a partir de uma amostra) e interpretar os resultados obtidos.

# Unidade curricular: Computabilidade e Complexidade

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: <p>Estudo e comparação de vários modelos de computação <br />(Turing-completos), do seu poder computacional e das suas limitações. Estudo das diversas classes de complexidade computacional.<br /> <br />Ao completar este curso espera-se que os alunos <br />- conheçam os modelos de computação clássicos utilizados no estudo da computabilidade de diversos problemas; <br />- saibam provar a equivalência de vários modelos Turing-completos; <br />- conheçam os resultados e métodos mais importantes no estudo da  computabilidade e complexidade; <br />- saibam classificar exemplos concretos de problemas e provar a sua (in)decidibilidade dentro das diversas classes de computabilidade.<br />- saibam classificar elemplos concretos pelas sua complexidade temporal e interpretar essa classificação. </p>

## Resultados de aprendizagem: <p style="margin-bottom: 0in; line-height: 150%;"><span style="color: #666666;"><span style="font-family: Arial, sans-serif;"><span style="font-size: small;"><em><strong>Os alunos são expostos a vários dos modelos de computação Turing-completos standard, como as máquinas de registo, máquinas de Turing e as funções recursivas. Para além da prova da equivalência dos diferentes modelos, estes são também utilizados para identificar diferentes </strong></em></span></span></span><em style="font-size: 9pt; font-family: Arial, sans-serif; color: #666666; line-height: 150%;"><strong>problemas indecidíveis. São usadas diferentes técnicas, como o método da diagonalização e da redução entre linguagens. Para adquirirem experiência em identificar a complexidade computacional de problemas concretos, faz-se uma introdução às classes P e NP, completude NP e o teorema de Cook, voltando também à técnica da redução.</strong></em></p>

## Pré-requisitos e co-requisitos: <p>Conhecimentos de alguns modelos de computação como Autómatos finitos, Expressões regulares e Gramáticas independentes. Conhecimentos básicos de Lógica.</p>

# Unidade curricular: Projeto-Estágio de Inteligência Artificial e Ciência de Dados

## Ano: 3
## Semestre: 2
## ECTS: 12.0
## Objetivos: Este estágio/projeto tem como objetivo aferir a capacidade dos alunos para enfrentarem desafios de investigação em ambiente universitário e promover o enriquecimento curricular dos alunos tendo em vista a sua integração profissional junto de instituições de investigação científica e empresas do sector informático.

## Resultados de aprendizagem: Durante este estágio/projeto os alunos deverão ser capazes de:<br /><br />1. integrar-se nos processos de trabalho da empresa/instituição de investigação;<br /><br />2. aplicar os conhecimentos adquiridos nos primeiros três anos do ciclo de estudos na análise e na resolução de problemas.

# Unidade curricular: Bases de Dados

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <p>Dotar os estudantes da teoria e prática necessária à concepção, construção e análise de bases de dados relacionais.</p>

## Resultados de aprendizagem: <p>Os estudantes deverão adquirir as seguintes competências:</p>
<h4><strong>Saber:</strong></h4>
<ul>
<li>Caracterizar um sistema de gestão de base de dados;</li>
<li>Conhecer o modelo de classes UML e o modelo relacional de dados;</li>
<li>Álgebra relacional como linguagens formal de manipulação de bases de dados relacionais;</li>
<li>Os fundamentos da linguagem SQL, como linguagem de definição, manipulação, interrogação e controlo de acesso de dados;</li>
<li>Regras de normalização de bases de dados com base em dependências funcionais e multivalor.</li>
</ul>
<h4><strong>Fazer:</strong></h4>
<ul>
<li>Modelar uma base de dados de média dimensão em UML e proceder à sua conversão para base de dados relacional;</li>
<li>Criar e manipular uma base de dados em SQL;</li>
<li>Criar aplicações com transações e controlo de concorrência.</li>
</ul>

# Unidade curricular: Introdução aos Sistemas Inteligentes e Autónomos

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <p>A UC apresenta uma perspetiva global das técnicas associadas aos sistemas inteligentes e autónomos, explorando a modelação e simulação de sistemas complexos e o desenvolvimento de aplicações de agentes inteligentes e de Sistemas Multi-Agente (SMA) com capacidade de adaptação/aprendizagem. O objetivo principal é especificar e implementar sistemas inteligentes autónomos, complexos e adaptativos. No final da UC, os estudantes deverão ser capazes de:<br />1. Compreender conceitos básicos relacionados com sistemas inteligentes autónomos e ser capaz de modelar e projetar sistemas inteligentes e autónomos complexos.<br />2. Compreender e ser capaz de utilizar conceitos de sistemas inteligentes multiagente tais como a comunicação, interação, coordenação, negociação e cooperação.<br />3. Compreender e ser capaz de utilizar o conceito de aprendizagem por reforço, incluindo algoritmos atuais e mecanismos de aprendizagem por reforço profunda.</p>

## Resultados de aprendizagem: Capacidade para especificar e implementar sistemas inteligentes autónomos, complexos e adaptativos.

## Pré-requisitos e co-requisitos: Conhecimentos de programação em Python / Java e Inteligência Artificial.

# Unidade curricular: Introdução à Programação

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <p>Introdução à programação de computadores usando a linguagem Python.</p>
<p>Noções fundamentais de programação: variáveis, tipos, operadores e expressões; funções e procedimentos; instruções condicionais e de seleção; iteração e recursão, leitura e escrita.</p>
<p>Estruturas de dados e algoritmos fundamentais: listas, dicionários, tuplos; pesquisa e processamento de dados, ordenação; problemas e aplicações.</p>
<p> </p>

## Resultados de aprendizagem: <p>No final do curso, os estudantes devem ser capazes de:<br /><br />1. saber escrever e interpretar programas para resolver problemas simples;<br />2. decompor problemas em sub-tarefas passíveis de implementação como sub-programas reutilizáveis;<br />3. testar e corrigir erros em programas<br />4. conhecer e manipular as estruturas de dados e algoritmos fundamentais e saber como aplicá-las em problemas concretos.</p>

# Unidade curricular: Segurança e Privacidade

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: Esta Unidade Curricular tem como objetivo fornecer aos estudantes uma perspetiva integrada dos fundamentos da segurança e privacidade informática; visa dotar os estudantes dos princípios de segurança de sistemas e privacidade de dados.

## Resultados de aprendizagem: 1. Apreender os princípios fundamentais de segurança de sistemas e privacidade de dados.<br />2. Identificar vulnerabilidades e ameaças e à segurança dos sistemas e privacidade dos dados.<br />3. Adquirir competências em criptografia e suas aplicações para segurança de sistemas.<br />4. Compreender regulamentação de proteção de dados e o impacto dos seus requisitos na segurança e privacidade.<br />5. Selecionar e aplicar tecnologias de reforço de privacidade, bem como metodologias para aferição de risco.

# Unidade curricular: Estruturas Discretas

## Ano: 3
## Semestre: 1
## ECTS: 6.0
## Objetivos: <p>Estudo das estruturas discretas fundamentais que estão na base formal da área de Ciência de Computadores/Informática.</p>

## Resultados de aprendizagem: <p>A frequência desta disciplina deve desenvolver as seguintes aptidões:</p>
<ul>
<li>Capacidade de trabalhar com notação matemática e com os principais conceitos de matemática discreta;</li>
<li>Construir e compreender provas matemáticas;</li>
<li>Utilizar conceitos matemáticos para formalisar e resolver problemas comuns em Ciência de Computadores/Informática.</li>
</ul>

# Unidade curricular: Métodos de Apoio à Decisão

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: Pretende-se que os alunos:<br /> 1. Se familiarizem com os pricipais problemas de decisão e optimização.<br /> 2. Aprendam a formalizar modelos de optimização em programação matemática.<br /> 3. Dominem alguns métodos utilizados para a sua resolução.<br /> 4. Se familiarizem com linguagens e bibliotecas existentes para resolução de problemas de decisão.<br /> 5. Desenvolvam aptidões para avaliar a complexidade computacional de problemas.

## Resultados de aprendizagem: Resultados:<br /> 1. Saber como formalizar de modo preciso situações práticas de decisão.<br /> 2. Conhecimento aplicado de programação matemática e da utilização de software disponível para resolver problemas de otimização.<br /> 3. Saber como implementar estes modelos.<br /> 4. Saber como utilizar simulação em problemas de decisão.

# Unidade curricular: Programação em Lógica

## Ano: 3
## Semestre: 2
## ECTS: 6.0
## Objetivos: - Transmitir aos estudantes conceitos fundamentais de programação em lógica<br />- Desenvolver nos estudantes competências de programação em Prolog<br />- Expor a relação entre programação em lógica e lógica matemática<br />- Despertar nos estudantes a motivação para a programação em lógica<br />- Apresentar aos estudantes aplicações práticas de programação em lógica<br />- Envolver os estudantes em projetos práticos de programação em lógica<br />- Relacionar a disciplina com outras do curso

## Resultados de aprendizagem: Ao concluir a disciplina, os estudantes devem ser capazes de:<br />- Identificar em que tipos de problemas a  programação lógica deve ou pode ser aplicada<br />- Compreender as limitações das linguagens lógicas e das suas implementações<br />- Saber desenvolver programas de relativa complexidade<br />- Saber resolver problemas com relativa complexidade usando programação em lógica<br />- Conhecer bem a sintaxe e semântica da linguagem Prolog<br />- Relacionar o conhecimento adquirido com outras unidades curriculares do curso

## Pré-requisitos e co-requisitos: Lógica computacional.

