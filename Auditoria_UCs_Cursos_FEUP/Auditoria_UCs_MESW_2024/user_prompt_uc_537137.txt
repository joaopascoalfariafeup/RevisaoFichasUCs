# Ficha a avaliar - versão em português

## Unidade curricular
Seminários em Engenharia de Software

## Curso responsável
Mestrado em Engenharia de Software

## Créditos ECTS
6

## Ano
2

## Semestre
1

## Objetivos
<p>O objetivo desta unidade curricular é apresentar, sob a forma de seminários independentes, um leque alargado de subtópicos de Engenharia de Software, que pela sua pertinência, em termos de investigação, inovação ou aplicação industrial, permitam aos estudantes preprarem-se melhor para a eventual realização de um trabalho de investigação cientifica ou aplicada numa área da Engenharia de Software.<br /><br />Pretende-se</p>
<ul>
<li>Familiarização com os processos, metodologias e práticas associados à investigação científica;</li>
<li>Refletir sobre o pensamento crítico e sobre a sua aplicação nas ciências.</li>
<li>Elaborar e apresentar um plano de um projecto de dissertação, incluindo o respectivo estado da arte, no tema selecionado.</li>
<li>Adquirir uma visão alargada de tópicos e subtópicos relevantes na área de Engenharia de Software.</li>
<li>Identificar a comunidade científica de referência numa área de investigação.</li>
</ul>

## Resultados de aprendizagem e competências
<p>Espera-se que os estudantes ganhem familiaridade com a abrangente influência que o software tem nas suas várias áreas de aplicação, e o profundo impacto na qualidade de vida no indivíduo e na sociedade.</p>
<p>No final desta unidade curricular o estudante deverá ser capaz de:</p>
<ul>
<li class="level1">
<div class="li">Interpretar uma proposta de trabalho de investigação, refiná-la e descrevê-la.</div>
</li>
<li class="level1">Ser capaz de identificar a comunidade científica de referência numa determinada área de investigação.</li>
<li class="level1">Pesquisar e selecionar publicações em bases de dados de publicações científicas e outros tipos de publicação.</li>
<li class="level1">
<div class="li">Elaborar um plano de trabalhos e um calendário para uma dissertação de mestrado.</div>
</li>
<li class="level1">Escrever um estado da arte no tema de investigação escolhido com base na pesquisa bibliográfica.</li>
<li class="level1">
<div class="li">Comunicar e apresentar os resultados de investigação.</div>
</li>
<li class="level1">Ganhar familiaridade com a abrangente influência que o software tem nas suas várias áreas de aplicação, e o profundo impacto na qualidade de vida no indivíduo e na sociedade.</li>
</ul>

## Pré-requisitos e co-requisitos
Conhecimentos de desenvolvimento de software.

## Programa
<p>Métodos e técnicas em projectos de investigação.<br />Métodos sistemáticos de pesquisa de informação científica.<br />Concepção e realização de trabalhos para publicação.<br />Concepção, elaboração e defesa do relatório do projecto de dissertação.<br /><br />Discussão de tópicos de investigação e evoluções recentes do conhecimento em Engenharia de Software (Tutoriais convidados), por exemplo:</p>
<ul>
<li>Engenharia de software baseada em modelos;</li>
<li>Reutilização de software em larga escala (linhas de produtos de software, padrões e frameworks);</li>
<li>Manutenção de software (compreensão, engenharia reversa);</li>
<li>Processos de software e melhoria de processos (métodos ágeis, PSP/TSP/CMMI);</li>
<li>Linguagens dinâmicas;</li>
<li>Gestão de conhecimento em Projectos de Software</li>
</ul>
<p> </p>

## Métodos de ensino e atividades de aprendizagem
Aulas formais leccionadas por oradores convidados e estudantes, endereçando os tópicos do programa acima mencionados, seguidas de um periodo de discussão pública e síntese colocada no sítio web da unidade curricular.<br /><br /><p>A atividade nas aulas divide-se em: <br /><br />1) exposição de tópicos de engenharia de software<br /><br />Tutorias convidados sobre tópicos de investigação e evoluções recentes do conhecimento em Engenharia de Software<br /><br />2) tópicos relacionados com o desenvolvimento de investigação científica<br /><br />Os tópicos tratados incluem métodos de investigação, pesquisa bibliográfica e elaboração de documentos de estado da arte, escrita e organização de uma dissertação de mestrado, comunicação de resultados de investigação.<br /><br />3) discussão e apresentação dos temas de dissertação<br /><br />Preparação e apresentação breve (10 min) sobre o trabaho de investigação a desenvolver.<br />Preparação e apresentação final (15 min) sobre o trabalho de investigação a desenvolver.<br /><br /><br />No final do semestre, os estudantes submetem um estado da arte no tópico de investigação escolhido.</p>

## Tipo de avaliação
Avaliação distribuída sem exame final

## Componentes de Avaliação
- Participação presencial: 20.0 %
- Trabalho escrito: 65.0 %
- Apresentação/discussão de um trabalho científico: 15.0 %

## Componentes de Ocupação
- Frequência das aulas: 39.0 horas
- Apresentação/discussão de um trabalho científico: 15.0 horas
- Trabalho escrito: 20.0 horas
- Trabalho de investigação: 94.0 horas

## Fórmula de cálculo da classificação final
Classificação final<br /><br />0.15 * (apresentação/discussão de trabalhos científicos) + <br />0.20 * (frequência das aulas e resposta a quizzes) + <br />0.55 * (relatório de estado da arte) + <br />0.10 * (revisão de trabalhos de colegas)

## Obtenção de frequência
Via avaliação distribuída.

## Melhoria de classificação
Através de um trabalho especificamente desenhado para o estudante.



# Ficha a avaliar - versão em inglês

## Unidade curricular
Software Engineering Seminars

## Curso responsável
Master in Software Engineering

## Créditos ECTS
6

## Ano
2

## Semestre
1

## Objetivos
<p>The objective of this course is to present, in the form of independent seminars, a wide range of Software Engineering subtopics, which, due to their relevance, in terms of research, innovation or industrial application, allow students to better prepare themselves for the eventual conducting scientific or applied research in a field of Software Engineering.<br /><br />It is intended</p>
<ul>
<li>Familiarization with the processes, methodologies and practices associated with scientific research.</li>
<li>Reflect on critical thinking and its application on sciences.</li>
<li>Develop and present a plan of a dissertation project, including the state of the art, in the selected theme.</li>
<li>Acquire a broad view of relevant topics and subtopics in the field of Software Engineering.</li>
<li>Identify scientific community of reference in a research area.</li>
</ul>

## Resultados de aprendizagem e competências
<p>Students are expected to become familiar with the broad influence that software has on its various application areas, and the profound impact on quality of life in the individual and society.</p>
<p>At the end of this course the student should be able to:</p>
<ul>
<li>Interpret a research paper proposal, refine it and describe it.</li>
<li>Be able to identify scientific community of reference in a particular area of &#8203;&#8203;research.</li>
<li>Search and select publications in databases of scientific publications and other types of publication.</li>
<li>Draw up a work plan and calendar for a master's dissertation.</li>
<li>Write a state of the art on the chosen research theme based on bibliographic research.</li>
<li>Communicate and present the results of the research work.</li>
<li>Gain familiarity with the wide-ranging influence software has on its various application areas, and the profound impact on quality of life in the individual and society.</li>
</ul>

## Pré-requisitos e co-requisitos
Knowledge in software development.

## Programa
<p>Methods and techniques in research projects.<br />Systematic methods for researching scientific information.<br />Design and execution of works for publication.<br />Design, preparation and defense of the dissertation project report.<br />Discussion of research topics and recent developments in Software Engineering knowledge (Guest Tutorials), for example:</p>
<ul>
<li>Model-based software engineering;</li>
<li>Large-scale software reuse (software product lines, standards and frameworks);</li>
<li>Software maintenance (understanding, reverse engineering);</li>
<li>Software processes and process improvement (agile methods, PSP / TSP / CMMI);</li>
<li>Dynamic languages;</li>
<li>Knowledge Management in Software Projects</li>
</ul>

## Métodos de ensino e atividades de aprendizagem
<p>Formal lectures by guest speakers and students addressing the above program topics, followed by a period of public discussion and synthesis posted on the course website.</p>
<p>The activity in the classes is divided into:</p>
<p>1) exposure of software engineering topics</p>
<p>Guest Tutorials on Research Topics and Recent Developments in Software Engineering Knowledge</p>
<p>2) topics related to the development of scientific research</p>
<p>Topics covered include research methods, bibliographic research and drafting of state of the art documents, writing and organizing a master's dissertation, communicating research findings.</p>
<p>3) discussion and presentation of dissertation topics</p>
<p>Preparation and brief presentation (10 min) about the research work to be developed.<br />Preparation and final presentation (15 min) on research work.</p>
<p> </p>
<p>At the end of the semester, students submit a state of the art on the chosen research topic.</p>

## Tipo de avaliação
Distributed evaluation without final exam

## Componentes de Avaliação
- Participação presencial: 20.0 %
- Trabalho escrito: 65.0 %
- Apresentação/discussão de um trabalho científico: 15.0 %

## Componentes de Ocupação
- Frequência das aulas: 39.0 hours
- Apresentação/discussão de um trabalho científico: 15.0 hours
- Trabalho escrito: 20.0 hours
- Trabalho de investigação: 94.0 hours

## Fórmula de cálculo da classificação final
Final Mark<br /><br />0.15 * (presentation/discussion of scientific work) + <br />0.20 * (presence in classes and quizzes) + <br />0.55 * (report: state of the art) + <br />0.10 * (peer reviews)

## Obtenção de frequência
By distributed evaluation.

## Melhoria de classificação
Possible with additional assignment.

