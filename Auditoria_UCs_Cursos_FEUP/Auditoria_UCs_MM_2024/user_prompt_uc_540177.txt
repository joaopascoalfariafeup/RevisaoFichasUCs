# Ficha a avaliar - versão em português

## Unidade curricular
Introdução à Programação

## Curso responsável
Mestrado em Multimédia

## Créditos ECTS
6

## Ano
1

## Semestre
1

## Objetivos
<p>Em termos gerais, pretende-se que o/a estudante adquira as compete&#770;ncias englobadas no pensamento computacional, acrescido da capacidade efetiva de desenvolver programas de baixa / me&#769;dia complexidade utilizando uma linguagem de programac&#807;a&#771;o.</p>

## Resultados de aprendizagem e competências
<p>No final desta unidade curricular o/a estudante devera&#769; adquirir as seguintes compete&#770;ncias: <br /><br />Conhecimentos:</p>
<ul>
<li>Desenho de algoritmos;</li>
<li>Criac&#807;a&#771;o de programas numa linguagem de programac&#807;a&#771;o;</li>
<li>Desenvolvimento de aplicac&#807;o&#771;es interativas;</li>
<li>Fundamentos do design de jogos digitais. </li>
</ul>
<p><br />Atitudes e comportamentos: </p>
<ul>
<li>Estruturac&#807;a&#771;o dos problemas informa&#769;ticos de acordo com os pilares do pensamento computacional;</li>
<li>Utilizac&#807;a&#771;o de frameworks multime&#769;dia no desenvolvimento de aplicac&#807;o&#771;es interativas.</li>
</ul>
<p><br />Aptido&#771;es e habilidades:</p>
<ul>
<li>Utilizac&#807;a&#771;o de IDE (Ambientes de Desenvolvimento Integrado).</li>
</ul>

## Pré-requisitos e co-requisitos
Não há pré-requisitos.

## Programa
<strong>1. Fundamentos da Programação</strong><br />Léxico e sintaxe e de uma linguagem de programação; variáveis e tipos de dados primitivos; expressões; input/output; estruturas de controlo condicionais; funções e passagem de parâmetros; recursividade e iteração: ciclos condicionais e contados; teste e depuração de programas.<br /><br /><strong>2. Estruturas de Dados</strong><br />Vetores; cadeias de caracteres; listas, pilhas, filas e tabelas; abstrações de dados.<br /><br /><strong>3. Projeto de Software</strong><br />Programação estruturada; programação orientada por objetos; bibliotecas e frameworks.<br /><br /><strong>4. Introdução à programação multimédia<br /></strong>- Gráficos e Visualização<br />- Conceito e design de Jogos Digitais<br />- Programação de Jogos Digitais

## Métodos de ensino e atividades de aprendizagem
<p>A metodologia de ensino baseia-se num modelo pedagógico construcionista, que alia um foco no desenvolvimento do pensamento computacional, através de um conjunto de dinâmicas pedagógicas ativas, desenvolvendo através de problemas que apelam à criatividade (jogos digitais) as competências básicas para o desenvolvimento de software de baixa/média complexidade. A unidade curricular é desenhada numa perspetiva de ludificação (<em>gamification</em>), criando ciclos iterativos curtos que promovem uma atividade regular de aprendizagem, conjugando uma componente supervisionada pelo docente e outra a desenvolver pelo estudante em autonomia.</p>
<p> </p>

## Tipo de avaliação
Avaliação distribuída com exame final

## Componentes de Avaliação
- Exame: 30.0 %
- Trabalho prático ou de projeto: 70.0 %

## Componentes de Ocupação
- Estudo autónomo: 80.0 horas
- Frequência das aulas: 42.0 horas
- Trabalho escrito: 40.0 horas

## Fórmula de cálculo da classificação final
<p>A componente distribuída tem um peso de 70% e o exame final 30%.</p>
<p>A avaliação distribuída é composta por duas componentes:</p>
<ul>
<li>Provas práticas em computador (duração de 60 a 90 min);</li>
</ul>
<p>São definidas 4 provas práticas em computador que permitem avaliar a capacidade de, em autonomia, o estudante ser capaz de colocar em funcionamento algoritmos para resolver determinados problemas de baixa/média complexidade. A correção é automática por computador.</p>
<ul>
<li>Avaliação Contínua</li>
</ul>
<p>Os pontos obtidos pelo estudante nas atividades ludificadas são convertidos na avaliação contínua. Neste caso particular, um máximo de 1000 pontos corresponde a 100% na avaliação contínua.</p>
<p>A fórmula de cálculo da avaliação distribuída será:</p>
<p>PPC * 70% + AC * 30%</p>
<p>PPC = média das provas práticas em computador</p>
<p>AC = avaliação contínua</p>

## Obtenção de frequência
<p>Terão frequência os estudantes que não ultrapassem o limite de faltas (25% do número de aulas práticas previstas).</p>
<p>Os trabalhadores estudantes e equivalentes dispensados das aulas devem, com periodicidade a combinar com os docentes, apresentar a evolução dos seus trabalhos, assim como devem fazer a apresentação destes, simultaneamente com os alunos ordinários, e realizar as provas práticas de avaliação individual previstas.</p>

## Melhoria de classificação
<p>A nota de exame pode ser melhorada em época de recurso. A nota da avaliação distribuída poderá ser melhorada na edição seguinte da unidade curricular</p>



# Ficha a avaliar - versão em inglês

## Unidade curricular
Introduction to Programming

## Curso responsável
Master in Multimedia

## Créditos ECTS
6

## Ano
1

## Semestre
1

## Objetivos
<p>In general terms, it is intended that the student acquire the competences encompassed in computational thinking, plus the effective ability to develop low / medium complexity programs using a programming language. </p>

## Resultados de aprendizagem e competências
<p>At the end of this course the student should acquire the following competences: <br /><br />Knowledge:</p>
<ul>
<li>Algorithm design;</li>
<li>Creation of programs with a programming language;</li>
<li>Development of interactive applications;</li>
<li>Fundamentals of digital game design. </li>
</ul>
<p><br />Attitudes and behaviors:</p>
<ul>
<li>Structuring of computer problems according to the pillars of computational thinking;</li>
<li>Use of multimedia frameworks in the development of interactive applications.</li>
</ul>
<p><br />Skills and abilities:</p>
<ul>
<li>Effective use of IDE (Integrated Development Environments).</li>
</ul>

## Pré-requisitos e co-requisitos
There are no prerequisites.

## Programa
<strong>1. Programming Fundamentals</strong><br />Vocabulary and syntax of a programming language; variables and primitive data types; expressions; input / output; conditional control structures; functions and parameters; recursion and iteration: conditional and the for loop; testing and debugging of programs.<br /><br /><strong>2. Data Structures</strong><br />Vectors; strings; stacks, lists and tables; abstractions.<br /><br /><strong>3. Software Project</strong><br />Structured programming; object-oriented programming; libraries and frameworks.<br /><br /><strong>4. Introduction to multimedia programming</strong><br />- Graphics and Visualization<br />- Concept and Design of Digital Games<br />- Digital Games Programming

## Métodos de ensino e atividades de aprendizagem
<p>The teaching methodology is based on a constructionist pedagogical model, which combines a focus on the development of computational thinking, through a set of active pedagogical dynamics, developing the basic skills for the development of low / medium complexity software through problems that appeal to creativity (digital games). The course is designed in a gamification perspective, creating short iterative cycles that promote regular learning activity, combining activities supervised by the teacher and other activities developed autonomously by the student.</p>

## Tipo de avaliação
Distributed evaluation with final exam

## Componentes de Avaliação
- Exame: 30.0 %
- Trabalho prático ou de projeto: 70.0 %

## Componentes de Ocupação
- Estudo autónomo: 80.0 hours
- Frequência das aulas: 42.0 hours
- Trabalho escrito: 40.0 hours

## Fórmula de cálculo da classificação final
<p>The distributed component has a weight of 70% and the final exam 30%.</p>
<p>The distributed evaluation consists of two components:</p>
<ul>
<li>Practical exams (duration of 60 to 90 min);</li>
</ul>
<p>4 practical exams are preformed using a computer that assess the ability of the student to develop algorithms to solve certain low / medium complexity problems. The assessment is automatic and performed by computer.</p>
<ul>
<li>Continuous assessment</li>
</ul>
<p>The points obtained by the student in the gamified activities are converted into the continuous assessment. In this particular case, a maximum of 1000 points corresponds to 100% in the continuous assessment.</p>
<p>The formula for the distributed evaluation is:</p>
<p>PE * 70% + CA * 30%</p>
<p>PE = average of the practical exams</p>
<p>CA = continuous assessment</p>

## Obtenção de frequência
<p>The students should not exceed the limit of allowed classes' absences (25% of the expected classes).<br /><br />Student workers and equivalents exempted from classes must, on a regular basis, combine their work with the teachers, present the progress of their work, as well as present them simultaneously with ordinary students, and carry out the practical tests of individual assessment provided.</p>

## Melhoria de classificação
<p>The grade of the exam may be improved at a second exam ("recurso"). Students may improve the grade of the continuous assessment component on the subsequent academic year.</p>

