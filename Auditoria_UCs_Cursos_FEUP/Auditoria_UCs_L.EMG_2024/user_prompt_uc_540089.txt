# Ficha a avaliar - versão em português

## Unidade curricular
Computadores e Programação

## Curso responsável
Licenciatura em Engenharia de Minas e Geo-Ambiente

## Créditos ECTS
6

## Ano
1

## Semestre
2

## Objetivos
<p>A diversidade dos problemas computacionais da engenharia exige muitas vezes soluções originais ou feitas à medida. <br />A sua abordagem necessita do domínio e compreensão da heurística e da algoritmia bem como de linguagens de programação. <br />Por isso o objectivo da disciplina pode ser resumido em três pontos: <br /><br /></p>
<ul>
<li>Como formular um problema, fazer a sua exploração prévia, identificar ou descobrir a sua solução, e formalizar a sua técnica de resolução; </li>
<li>Como ler e escrever linguagens formais estruturadas; </li>
<li>Como programar um computador (rudimentos da programação imperativa ).</li>
</ul>

## Resultados de aprendizagem e competências
<p>O estudante será capaz de:</p>
<ul>
<li>ler e escrever uma linguagem de programação imperativa estruturada;</li>
<li>Compreender um problema e formular uma solução;</li>
<li>identificar e utilizar ferramentas informáticas adequadas.</li>
</ul>

## Pré-requisitos e co-requisitos
<p>Conceitos elementares de lógica.</p>
<p>Conceitos elementares de àlgebra, incluindo matrizes.</p>

## Programa
<p>Ferramentas informáticas exploratórias: folhas de cálculo, manipuladores algébricos, traçadores de gráficos.</p>
<p>Exemplos de aplicação.</p>
<p>Apresentação do ambiente de cálculo MATLAB ou OCTAVE, e sua utilização para a exploração de conceitos estruturantes de programação:<br /> - Variáveis, operadores funções e expressões; <br /> - Comandos simples; <br /> - Comandos de entrada saída; <br /> - Estruturas de controlo de fluxo; <br /> Aplicação a problemas exemplares.</p>
<p>Técnicas de resolução de problemas. <br /> Estruturas algorítmicas, sua formalização em linguagem comum e gráfica. <br /> Linguagens escritas e gráficas de descrição sintáctica.</p>
<p> </p>

## Métodos de ensino e atividades de aprendizagem
<p>As aulas são todas em laboratório de cálculo e presenciais.</p>
<p>A interação com os estudantes é também feita pela UC moodle correspondente.</p>

## Tipo de avaliação
Avaliação distribuída sem exame final

## Componentes de Avaliação
- Participação presencial: 10.0 %
- Teste: 30.0 %
- Trabalho prático ou de projeto: 60.0 %

## Componentes de Ocupação
- Estudo autónomo: 86.0 horas
- Frequência das aulas: 56.0 horas
- Trabalho laboratorial: 20.0 horas

## Fórmula de cálculo da classificação final
<p>Nota final = (0,1*P+0,3*T+0,6*L)*0,2; <br /><br />sendo:<br />P: a valoração do registo de presenças, do registo de realização de atividades e  da apreciação do docente (%);<br />T: as  classificação obtida no teste (%); <br />L: a média ponderada dos trabalhos  extra aula (%);<br />Nota Final: (0,0 .. 20.0)<br />Classificações superiores a 18 serão objecto de defesa oral.<br /><br /></p>

## Obtenção de frequência
<p>Não exceder o número limite de faltas - 25% do número de aulas leccionadas. <br />O registo de presenças far-se-à em todas as aulas.</p>

## Melhoria de classificação
<p>A melhoria de classificação será feita por exame, em simultâneo com o exame de recurso.<br />Os testes não terão recurso nem melhoria de classificação.</p>



# Ficha a avaliar - versão em inglês

## Unidade curricular
Computers and Programming

## Curso responsável
Bachelor in Mining and Geo-Environmental Engineering

## Créditos ECTS
6

## Ano
1

## Semestre
2

## Objetivos
<p>Engineering computation problems frequently need original or taillored solutions.</p>
<p>Its design demands heuristics, algorithmic and programming skills.</p>
<p> The course goals may be stated as:</p>
<ul>
<li>Problem formulation, exploration, solution and formal resolution;</li>
<li>Reading and writing of structured formal languages;</li>
<li>basic imperative computer programming.</li>
</ul>

## Resultados de aprendizagem e competências
<p>Student will be able to:</p>
<ul>
<li>read and write a structured imperative programming language;</li>
<li>understand a problem and formulate a solution;</li>
<li>identify and use adaquate informatic tools.</li>
</ul>

## Pré-requisitos e co-requisitos
Basic logic.<br />Basic algebra (matrices).

## Programa
<p>Exploratory informatic tools: worksheets, computer algebra systems, plotting tools.</p>
<p>Use of MatLab or Octave for problem solving, and to explore structural programming concepts:</p>
<p>- variables, operators functions and  expressions;<br />- Simple commands;<br />- Input / output;<br />- flow control structures.</p>
<p>Application to examples.</p>
<p>Problem solving techniques.</p>
<p>Algorithmic languages.</p>

## Métodos de ensino e atividades de aprendizagem
<p>Presencial lab classes.</p>
<p>Supported by e-learning course.</p>

## Tipo de avaliação
Distributed evaluation without final exam

## Componentes de Avaliação
- Participação presencial: 10.0 %
- Teste: 30.0 %
- Trabalho prático ou de projeto: 60.0 %

## Componentes de Ocupação
- Estudo autónomo: 86.0 hours
- Frequência das aulas: 56.0 hours
- Trabalho laboratorial: 20.0 hours

## Fórmula de cálculo da classificação final
<p>Final grade = (0,1*P+0,3*T+0,6*L)*0,2; <br />beeing:<br />P - attendance, activities and teacher's appreciation(%);<br />T - quizzes (%);<br />L: lab home assignements (%);<br />Grades over 18 are subject to oral testing.<br /><br /><br /></p>

## Obtenção de frequência
less than 25% absence.<br />Attendance registered.

## Melhoria de classificação
By special exam. Graded quizzes will not be improved or substituted.

